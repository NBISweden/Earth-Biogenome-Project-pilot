// Adapted from https://github.com/nf-core/configs/blob/master/conf/pdc_kth.config

params {
    // SNIC compute allocation id
    project = ''
    // Just FYI.
    // max_memory = 1790.GB
    // max_cpus = 256
    // max_time = 7.d
}

def clusterOptionsCreator = { mem, time, cpus ->
    List clusterOpts = [ "-A $params.project ${params.clusterOptions ?: ''}" ]
    if (time < 7.d && mem <= 111.GB && cpus < 256) {
        clusterOpts << '-p shared'
    } else if (time < 1.d) {
        // Shortish
        if (mem > 222.GB) {
            clusterOpts << '-p memory,main'
        } else {
            clusterOpts << '-p main'
        }
    } else {
        // Not shortish
        if (mem > 222.GB) {
            clusterOpts << '-p memory'
        } else {
            clusterOpts << '-p long'
        }
    }
    if (!mem || mem < 6.GB) {
        // Impose minimum memory if request is below
        clusterOpts << '--mem=6G'
    }
    return clusterOpts.join(' ')
}

includeConfig 'tool_resources.config'

process {
    // resource limits are based on nodes on the shared partition of PDC dardel:
    // CfgTRES=cpu=256,mem=237174M,
    // MaxTime=7-00:00:00
    // Processes that require more resources need to explicitly overwrite it,
    // and use other partitions: e.g. long or memory
    resourceLimits = [
        memory: 222.GB,
        cpus: 256,
        time: 7.d
    ]

    // all processes that need more than the default resources need to be added here:
    withName: 'FCSGX_RUNGX' {
        cpus       = 20
        memory     = 1024.GB
        time       = 1.h
        resourceLimits = [
            cpus: 20,
            memory: 1024.GB,
            time: 1.h
        ]
    }
    executor       = 'slurm'
    clusterOptions = { clusterOptionsCreator(task.memory, task.time, task.cpus) }
    // There is no node local storage, but there is a scratch space.
    scratch        = '$PDC_TMP'
}
singularity {
    enabled        = true
    envWhitelist   = 'PDC_TMP'
}
