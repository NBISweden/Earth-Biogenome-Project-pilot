process {

    withName: 'PREPARE_INPUT:SAMTOOLS_FASTA' {
        tag        = { "$meta.id:$bam.baseName" }
        ext.prefix = { bam.baseName }
    }

    withName: 'ASSEMBLY_VALIDATION:QUAST' {
        publishDir = [
            path: { "$params.outdir/assembly_validation/quast" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ASSEMBLY_VALIDATION:INSPECTOR' {
        tag        = { "$meta.id:$assembly.baseName" }
        ext.prefix = { assembly.baseName }
        publishDir = [
            path: { "$params.outdir/assembly_validation/inspector" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MERYL_COUNT' {
        cpus   = 20
        memory = 128.GB
        time   = 16.h
    }
    withName: 'MERYL_.*' {
        ext.args = "k=${params.kmer_size}"
    }
    withName: 'MERQURY' {
        publishDir = [
            path: { "$params.outdir/assembly_validation/merqury" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'GENOMESCOPE2' {
        ext.args = [
            "-k=${params.kmer_size}",
            "-p=${params.ploidy}"
        ].join(' ')
        publishDir = [
            path: { "$params.outdir/assembly_validation/genomescope2" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // BLOBTOOLKIT
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:SEQKIT_SPLIT2' {
        ext.args = '--by-part 10'
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_CREATE' {
        tag        = { "$meta.id:$assembly.baseName" }
        ext.prefix = { "${meta.id}_${assembly.baseName}" }
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_ADD' {
        ext.args   = '--taxrule bestsumorder'
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_VIEW' {
        ext.args   = '--taxrule bestsumorder'
        publishDir = [
            path: { "$params.outdir/assembly_validation/blobtoolkit/${blobdir.baseName}" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLAST_BLASTN' {
        // label = 'fat'
        cpus   = 20
        memory = 128.GB
        time   = 2.d
        ext.args   = [ 
            '-outfmt "6 qseqid staxids bitscore std"',
            '-max_target_seqs 10',
            '-max_hsps 1',
            '-evalue 1e-25'
        ].join(' ')
        ext.prefix = { fasta.baseName }
        publishDir = [
            path: { "$params.outdir/assembly_validation/blobtoolkit/blast_blastn" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:DIAMOND_BLASTX' {
        cpus   = 12
        memory = 72.GB
        time   = 2.d
        ext.args   = [
            // '--outfmt 6 qseqid staxids bitscore qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore', // Moved into workflow due to nf-core format.
            '--sensitive',
            '--max-target-seqs 1',
            '--evalue 1e-25'
        ].join(' ')
        ext.prefix = { fasta.baseName }
        publishDir = [
            path: { "$params.outdir/assembly_validation/blobtoolkit/diamond_blastx" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:MINIMAP2_ALIGN' {
        cpus   = 12
        memory = 72.GB
        time   = 2.d
        ext.args   = '-ax map-pb'
        ext.prefix = { reference.baseName }
        publishDir = [
            path: { "$params.outdir/assembly_validation/blobtoolkit/minimap2_bam" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BUSCO' {
        ext.args = '--mode genome'
        publishDir = [
            path: { "$params.outdir/assembly_validation/blobtoolkit/busco" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}