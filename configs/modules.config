process {

    // PREPARE INPUT
    withName: 'PREPARE_INPUT:SAMTOOLS_FASTA' {
        tag        = { "$meta.id:$bam.baseName" }
        ext.prefix = { bam.baseName }
    }

    // BUILD DATABASES
    withName: 'FASTK_FASTK' {
        scratch    = false  // Disable scratch to get around bug https://github.com/nextflow-io/nextflow/issues/2983
        ext.args   = { "-t1 -k${meta.kmer_size}" }
        ext.when   = !params.enable_conda
    }
    withName: 'FASTK_MERGE' {
        scratch    = false  // Disable scratch to get around bug https://github.com/nextflow-io/nextflow/issues/2983
        ext.prefix = { "${meta.id}_merged" }
        ext.when   = !params.enable_conda
    }
    withName: 'BUILD_HIFI_DATABASES:FASTK_FASTK' {
        ext.prefix = { "${meta.id}_${reads instanceof List ? reads[0].baseName : reads.baseName}_hifi" }
    }
    withName: 'BUILD_HIC_DATABASES:FASTK_FASTK' {
        ext.prefix = { "${meta.id}_${reads instanceof List ? reads[0].baseName : reads.baseName}_hic" }
    }
    withName: 'MERYL_COUNT' {
        cpus   = 20
        memory = 128.GB
        time   = 16.h
        ext.when = params.enable_conda
    }
    withName: 'MERYL_.*' {
        ext.args = { "k=${meta.kmer_size}" }
        ext.when = params.enable_conda
    }

    // GENOME PROPERTIES
    withName: 'FASTK_HISTEX' {
        ext.args   = "-G"
        ext.prefix = { "${meta.id}_histex" }
        ext.when   = !params.enable_conda
    }
    withName: 'GENOMESCOPE2' {
        ext.args   = { 
            [
                "-k=${meta.kmer_size}",
                "-p=${meta.ploidy}"
            ].join(' ')
        }
        ext.when   = params.enable_conda
        publishDir = [
            path: { "$params.outdir/01_genome_properties/genomescope2" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'GENESCOPEFK' {
        ext.args   = {
            [
                "--kmer_length ${meta.kmer_size}",
                "--ploidy ${meta.ploidy}"
            ].join(' ')
        }
        ext.when   = !params.enable_conda
        publishDir = [
            path: { "$params.outdir/01_genome_properties/genescopefk" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'MERQURYFK_PLOIDYPLOT' {
        publishDir = [
            path: { "$params.outdir/01_genome_properties/ploidyplot" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'MERQURYFK_KATGC' {
        publishDir = [
            path: { "$params.outdir/01_genome_properties/katgc" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // COMPARE_LIBRARIES
    withName: 'MERQURYFK_KATCOMP' {
        publishDir = [
            path: { "$params.outdir/01_library_comparison/kat_comp" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // SCREEN READS
    withName: 'MASH_SCREEN' {
        ext.args   = '-w'
        ext.prefix = { "${meta.id}_${query.baseName}" }
        publishDir = [
            path: { "$params.outdir/01_contamination_screen/mash_screen/screens" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'MASH_FILTER' {
        ext.args   = "-F '[\\t/]' '\$1 > 0.9 && \$2 > 100'"
        publishDir = [
            path: { "$params.outdir/01_contamination_screen/mash_screen" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // COMPARE_ASSEMBLIES
    withName: 'QUAST' {
        cpus = 2     // FIXME:: Seems dependent on number of assemblies as there is multi-threaded
        publishDir = [
            path: { "$params.outdir/assembly_validation/quast" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // EVALUATE_ASSEMBLY
    withName: 'INSPECTOR' {
        tag        = { meta.build }
        ext.prefix = { meta.build }
        publishDir = [
            path: { "$params.outdir/assembly_validation/inspector/$meta.build" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // withName: 'ASSEMBLY_VALIDATION:MERQURY' {
    //     ext.when   = params.enable_conda
    //     publishDir = [
    //         path: { "$params.outdir/assembly_validation/merqury" },
    //         mode: params.publish_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }

    withName: 'MERQURYFK_MERQURYFK' {
        tag        = { meta.build }
        ext.prefix = { meta.build }
        ext.when   = !params.enable_conda
        publishDir = [
            path: { "$params.outdir/assembly_validation/merquryfk/$meta.build" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BUSCO' {
        tag        = { "${meta.build}-${lineage}" }
        ext.prefix = { "${meta.build}-${lineage}" }
        ext.args = '--mode genome'
        publishDir = [
            path: { "$params.outdir/assembly_validation/busco/$meta.build" },
            mode: params.publish_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // ASSEMBLY_VALIDATION:BLOBTOOLKIT
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:SEQKIT_SPLIT2' {
    //     ext.args = '--by-part 10'
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_CREATE' {
    //     tag        = { "$meta.id:$assembly.baseName" }
    //     ext.prefix = { "${meta.id}_${assembly.baseName}" }
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_ADD' {
    //     ext.args   = '--taxrule bestsumorder'
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLOBTOOLKIT_VIEW' {
    //     ext.args   = '--taxrule bestsumorder'
    //     publishDir = [
    //         path: { "$params.outdir/assembly_validation/blobtoolkit/${blobdir.baseName}" },
    //         mode: params.publish_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:BLAST_BLASTN' {
    //     // label = 'fat'
    //     cpus   = 20
    //     memory = 128.GB
    //     time   = 2.d
    //     ext.args   = [ 
    //         '-outfmt "6 qseqid staxids bitscore std"',
    //         '-max_target_seqs 10',
    //         '-max_hsps 1',
    //         '-evalue 1e-25'
    //     ].join(' ')
    //     ext.prefix = { fasta.baseName }
    //     publishDir = [
    //         path: { "$params.outdir/assembly_validation/blobtoolkit/blast_blastn" },
    //         mode: params.publish_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:DIAMOND_BLASTX' {
    //     cpus   = 12
    //     memory = 72.GB
    //     time   = 2.d
    //     ext.args   = [
    //         // '--outfmt 6 qseqid staxids bitscore qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore', // Moved into workflow due to nf-core format.
    //         '--sensitive',
    //         '--max-target-seqs 1',
    //         '--evalue 1e-25'
    //     ].join(' ')
    //     ext.prefix = { fasta.baseName }
    //     publishDir = [
    //         path: { "$params.outdir/assembly_validation/blobtoolkit/diamond_blastx" },
    //         mode: params.publish_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }
    // withName: 'ASSEMBLY_VALIDATION:BLOBTOOLKIT:MINIMAP2_ALIGN' {
    //     cpus   = 12
    //     memory = 72.GB
    //     time   = 2.d
    //     ext.args   = '-ax map-pb'
    //     ext.prefix = { reference.baseName }
    //     publishDir = [
    //         path: { "$params.outdir/assembly_validation/blobtoolkit/minimap2_bam" },
    //         mode: params.publish_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }
}
