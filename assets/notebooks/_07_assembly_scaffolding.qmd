::::: {.content-visible when-meta="scaffold"}

## Scaffolding

### Pairtools

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Pairs by alignment status").show())
```

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Fraction of read pairs by strand orientation").show())
```

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Pre-filtered pairs as a function of genomic separation (in detail)").show())
```

```{python}
#| output: asis
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*.assembly_summary"):
    displayGfastatsAssemblySummary(f"{log_path}/*-scaffolded-*.assembly_summary")
```

```{python}
#| output: asis
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.completeness.stats"):
    displayAssemblyCompleteness(f"{log_path}/*-scaffolded-*_merquryfk.completeness.stats")
    displayAssemblyQualityValue(f"{log_path}/*-scaffolded-*_merquryfk.qv")
    if(glob.glob(f"{log_path}/*-scaffolded-*_merqury.*.qv")):
        displayScaffoldQualityValue(f"{log_path}/*-scaffolded-*_merqury.*.qv")
```

```{python}
#| output: asis
if scaffold and (
    glob.glob(f"{log_path}/*-scaffolded-*_merquryfk*.spectra-cn.st.png")
    or glob.glob(f"{log_path}/*-scaffolded-*_merqury.*.spectra-cn.st.png")
):
    displayMerquryCopyNumberSpectra(
        f"{log_path}/*-scaffolded-*_merquryfk*.spectra-cn.st.png",
        f"{log_path}/*-scaffolded-*_merqury.*.spectra-cn.st.png"
    )

if scaffold and (
    glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.spectra-asm.st.png")
    or glob.glob(f"{log_path}/*-scaffolded-*_merqury.spectra-asm.st.png")
):
    displayMerquryAssemblySpectra(
        f"{log_path}/*-scaffolded-*_merquryfk.spectra-asm.st.png",
        f"{log_path}/*-scaffolded-*_merqury.spectra-asm.st.png"
    )

if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.false_duplications.tsv"):
    displayMerquryFalseDuplicationEstimate(f"{log_path}/*-scaffolded-*_merquryfk.false_duplications.tsv")
```

:::::
