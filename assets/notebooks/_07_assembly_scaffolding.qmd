::::: {.content-visible when-meta="scaffold"}

## Scaffolding

### Pairtools

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Pairs by alignment status").show())
```

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Fraction of read pairs by strand orientation").show())
```

```{python}
if scaffold and "pairtools" in multiqc.list_modules():
    display(multiqc.get_plot("pairtools", "Pre-filtered pairs as a function of genomic separation (in detail)").show())
```

```{python}
#| output: asis
if assemble and glob.glob(f"{log_path}/*-scaffolded-*.assembly_summary"):
    displayGfastatsAssemblySummary(f"{log_path}/*-scaffolded-*.assembly_summary")
```

```{python}
#| output: asis
if assemble and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.completeness.stats"):
    displayAssemblyCompleteness(f"{log_path}/*-scaffolded-*_merquryfk.completeness.stats")
    displayAssemblyQualityValue(f"{log_path}/*-scaffolded-*_merquryfk.qv")
    if(glob.glob(f"{log_path}/*-scaffolded-*_merqury.*.qv")):
        displayScaffoldQualityValue(f"{log_path}/*-scaffolded-*_merqury.*.qv")
```

##### Copy number spectra

:::: {.panel-tabset}

## MerquryFK

```{python}
# TODO Do we need for each fasta. This is combined fastas
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.spectra-cn.st.png"):
    display(Image(filename=glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.spectra-cn.st.png")[0]))
else:
    print("Scaffolded Assembly MerquryFK copy spectra not available")
```

## Merqury

```{python}
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merqury.spectra-cn.st.png"):
    display(Image(filename=glob.glob(f"{log_path}/*-scaffolded-*_merqury.spectra-cn.st.png")[0]))
else:
    print("Scaffolded Assembly Merqury copy spectra not available")
```

::::

##### Assembly spectra

:::: {.panel-tabset}

## MerquryFK

```{python}
# TODO account for multiple assemblers
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.spectra-asm.st.png"):
    display(Image(filename=glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.spectra-asm.st.png")[0]))
else:
    print("Scaffold Assembly MerquryFK assembly spectra not available")
```

## Merqury

```{python}
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merqury.spectra-asm.st.png"):
    display(Image(filename=glob.glob(f"{log_path}/*-scaffolded-*_merqury.spectra-asm.st.png")[0]))
else:
    print("Scaffolded Assembly Merqury assembly spectra not available")
```

::::

##### False duplications

```{python}
#| output: asis
if scaffold and glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.false_duplications.tsv"):
    print(
        pd.read_csv(
            glob.glob(f"{log_path}/*-scaffolded-*_merquryfk.false_duplications.tsv")[0], sep="\t"
        ).to_markdown(index=False)
    )
else:
    print("Scaffold Assembly false duplications not available")
```

:::::
