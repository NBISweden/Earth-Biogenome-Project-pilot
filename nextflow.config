manifest {
    name = 'Earth Biogenome Project Assembly and Annotation workflow'
    author = 'Mahesh Binzer-Panchal'
    homePage = 'https://github.com/NBISweden/Earth-Biogenome-Project-pilot'
    description = 'A pilot workflow for performing de novo genome assembly and annotation for the Earth Biogenome Project.'
    mainScript = 'main.nf'
    //  '!>=21.04.0' : Run with version 21.04.0 or higher, otherwise exit.
    nextflowVersion = '!>=21.04.0'
    version = '0.1'
}

// Default Workflow parameters
// Override them in the params.yml located in the analyses directories.
params {

    // Workflow inputs
    input = null
    reference = null
    kmer_size = 21
    ploidy = 2

    steps = 'data_qc,preprocess,assemble,validate,curate'

    // Workflow outputs
    outdir = 'results'
    // Mode of copying results from the work directory
    // 'symlink' : Use for test data.
    // 'copy'    : Use for full analysis data.
    publish_mode = 'copy' // values: 'symlink', 'copy'

    // Tool specific
    // Blobtools
    busco_lineages = 'auto'
    busco_lineage_path = null
    diamond_db = null
    blast_db = null
    ncbi_taxonomy = null

    // General module configuration
    multiqc_config = "$baseDir/configs/multiqc_conf.yaml"

    // Conda
    enable_conda = false
}

includeConfig 'configs/nf-core-defaults.config'

profiles {

    // A profile for the Uppmax clusters
    uppmax {
        params {
            // SNIC compute allocation id
            project = ''
        }
        process {
            executor = 'slurm'
            clusterOptions = { "-A $params.project" }
            // Use node local storage for execution.
            scratch = '$SNIC_TMP'
            withLabel: 'fat' {
                clusterOptions = { "-A $params.project -C mem1TB" }
                memory = 1.TB
            }
        }
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
    }

    // A profile for running locally with Docker
    docker_local {
        process {
            executor = 'local'
            scratch = true
        }
        docker.enabled = true
        docker.userEmulation = true
    }

    // A profile for running locally with Singularity
    // (e.g., using an interactive Uppmax session)
    uppmax_local {
        process {
            executor = 'local'
            scratch = '$SNIC_TMP'
        }
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
    }

    execution_report {
        timeline {
            enabled = true
            file = "${params.results}/pipeline_info/execution_timeline.html"
        }
        report {
            enabled = true
            file = "${params.results}/pipeline_info/execution_report.html"
        }
        trace {
            enabled = true
            file = "${params.results}/pipeline_info/execution_trace.txt"
        }
        dag {
            enabled = true
            file = "${params.results}/pipeline_info/pipeline_dag.mmd"
        }
    }


    testdata_full {
        params {
            input = "$projectDir/assets/test_dataset_full.yml"
            busco_lineages = 'eukaryota'
        }
    }

    uppmax_databases {
        params {
            busco_lineage_path = '/sw/bioinfo/BUSCO/v5_lineage_sets/lineages/'
            diamond_db = '/proj/snic2021-5-291/nobackup/databases/diamond_uniprot'
            blast_db = [ 
                '/proj/snic2021-5-291/nobackup/databases/blast_refseq_euk',
                '/proj/snic2021-5-291/nobackup/databases/blast_refseq_prok',
                '/proj/snic2021-5-291/nobackup/databases/blast_refseq_virus',
            ]
            ncbi_taxonomy = '/sw/data/ncbi_taxonomy/latest/'
        }
    }
}

includeConfig 'configs/modules.config'
